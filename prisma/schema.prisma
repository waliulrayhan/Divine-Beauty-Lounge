// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Add your models here

model User {
  id            String    @id @default(uuid())
  employeeId    String    @unique
  username      String    @unique
  email         String    @unique
  phoneNumber   String
  password      String
  nidNumber     String    @unique
  jobStartDate  DateTime
  jobEndDate    DateTime?
  isActive      Boolean   @default(true)
  role          UserRole
  permissions   Json
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  services      Service[]
  products      Product[]
  stockIns      StockIn[]
  stockOuts     StockOut[]
}

model Service {
  id            String    @id @default(uuid())
  name          String
  description   String
  serviceCharge Float
  createdBy     User      @relation(fields: [createdById], references: [id])
  createdById   String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  products      Product[]
}

model Product {
  id          String    @id @default(uuid())
  name        String
  description String
  service     Service   @relation(fields: [serviceId], references: [id])
  serviceId   String
  createdBy   User      @relation(fields: [createdById], references: [id])
  createdById String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  stockIns    StockIn[]
  stockOuts   StockOut[]
}

model StockIn {
  id          String   @id @default(uuid())
  product     Product  @relation(fields: [productId], references: [id])
  productId   String
  brandName   String
  quantity    Int
  pricePerUnit Float
  comments    String?
  createdBy   User     @relation(fields: [createdById], references: [id])
  createdById String
  createdAt   DateTime @default(now())
}

model StockOut {
  id          String   @id @default(uuid())
  product     Product  @relation(fields: [productId], references: [id])
  productId   String
  quantity    Int
  comments    String?
  createdBy   User     @relation(fields: [createdById], references: [id])
  createdById String
  createdAt   DateTime @default(now())
}

enum UserRole {
  SUPER_ADMIN
  NORMAL_ADMIN
}
